{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./style.css\";import{Stage,Layer,Rect,Text,Circle,Line}from\"react-konva\";import{toast}from\"react-toastify\";import Loader from\"react-loader-spinner\";import RestAPI from\"services/api\";import{handleServerErrors}from\"utils/errorHandler\";var ConceptMapContainer=/*#__PURE__*/function(_Component){_inherits(ConceptMapContainer,_Component);var _super=_createSuper(ConceptMapContainer);function ConceptMapContainer(props){var _this;_classCallCheck(this,ConceptMapContainer);_this=_super.call(this,props);_this.toTitleCase=function(phrase){return phrase.toLowerCase().split(\" \").map(function(word){return word.charAt(0).toUpperCase()+word.slice(1);}).join(\" \");};_this.extractNodes=function(){var data=_this.state.data;var categories={};var keywords={};var links={};for(var index=0;index<data.length;index++){var keyword=data[index].keyword;var keywordCategories=data[index].category;keywords[keyword]={};links[keyword]=keywordCategories;for(var categoryIndex=0;categoryIndex<keywordCategories.length;categoryIndex++){categories[keywordCategories[categoryIndex]]={};}}_this.setState({keywords,categories,links},_this.generateCoordinates);};_this.generateCoordinates=function(){var _this$state=_this.state,keywords=_this$state.keywords,categories=_this$state.categories;var totalKeywords=Object.keys(keywords).length;var KeywordBlockTotalSize=totalKeywords*(_this.keywordNodeSpacing+_this.keywordNodeSize);var keywordStartOffset=parseInt((_this.stageHeight-KeywordBlockTotalSize)/2);var keywordCount=0;for(var keyword in keywords){var y=keywordStartOffset+parseInt(_this.keywordNodeSpacing/2)+keywordCount*(parseInt(_this.keywordNodeSpacing/2)+_this.keywordNodeSize);keywordCount+=1;keywords[keyword].x=_this.KeywordNodeX;keywords[keyword].y=y;}var totalCategories=Object.keys(categories).length;var categoriesBlockTotalSize=totalCategories*(_this.categoryNodeSpacing+_this.categoryNodeHeight);var categoriesStartOffset=parseInt((_this.stageHeight-categoriesBlockTotalSize)/2);var categoryCount=0;for(var category in categories){var _y=categoriesStartOffset+parseInt(_this.categoryNodeSpacing/2)+categoryCount*(parseInt(_this.categoryNodeSpacing/2)+_this.categoryNodeHeight);categoryCount+=1;categories[category].x=_this.categoryNodeX;categories[category].y=_y;}_this.setState({keywords,categories});};_this.getNodes=function(){var _this$state2=_this.state,keywords=_this$state2.keywords,categories=_this$state2.categories,links=_this$state2.links;var nodes=[];for(var keywordKey in links){var keywordLink=links[keywordKey];var keyword=keywords[keywordKey];for(var index in keywordLink){var category=categories[keywordLink[index]];nodes.push(/*#__PURE__*/React.createElement(Line,{points:[keyword.x,keyword.y,category.x,category.y+parseInt(_this.categoryNodeHeight/2)],tension:500,stroke:keyword.highlight&&category.highlight?_this.highlightColor:_this.lineColor}));}}var _loop=function _loop(_keyword){nodes.push(/*#__PURE__*/React.createElement(Circle,{key:_keyword+\"circle\",x:keywords[_keyword].x,y:keywords[_keyword].y,radius:10,fill:_this.circleFillColor,strokeWidth:\"3\",onMouseOver:function onMouseOver(e){return _this.mouseOverEvent(e,\"keyword\",_keyword);},onMouseOut:function onMouseOut(e){return _this.mouseOutEvent(e,\"keyword\",_keyword);},stroke:keywords[_keyword].highlight?_this.highlightColor:_this.circleFillColor}));nodes.push(/*#__PURE__*/React.createElement(Text,{key:_keyword+\"text\",x:10,y:keywords[_keyword].y-5,text:_this.toTitleCase(_keyword),fontFamily:_this.textFontFamily}));};for(var _keyword in keywords){_loop(_keyword);}var _loop2=function _loop2(_category){nodes.push(/*#__PURE__*/React.createElement(Rect,{key:_category+\"rect\",x:categories[_category].x,y:categories[_category].y,height:_this.categoryNodeHeight,width:_this.categoryNodeWidth,cornerRadius:10,fill:_this.rectFillColor,onMouseOver:function onMouseOver(e){return _this.mouseOverEvent(e,\"category\",_category);},onMouseOut:function onMouseOut(e){return _this.mouseOutEvent(e,\"category\",_category);},strokeWidth:\"3\",stroke:categories[_category].highlight?_this.highlightColor:_this.rectFillColor}));// add ellipsis to text after 10 chars\nvar categoryText=_category.length>35?_category.slice(0,35)+\"...\":_category;nodes.push(/*#__PURE__*/React.createElement(Text,{key:_category+\"text\",x:categories[_category].x+10,y:categories[_category].y+10,onMouseOver:function onMouseOver(e){return _this.mouseOverEvent(e,\"category\",_category);},onMouseOut:function onMouseOut(e){return _this.mouseOutEvent(e,\"category\",_category);},text:categoryText,fontFamily:_this.textFontFamily,stroke:\"white\",strokeWidth:\"1\"}));};for(var _category in categories){_loop2(_category);}return nodes;};_this.mouseOverEvent=function(event,nodeType,nodeKey){var stage=event.target.getStage();var container=stage.container();container.style.cursor=\"pointer\";var _this$state3=_this.state,categories=_this$state3.categories,keywords=_this$state3.keywords,links=_this$state3.links;if(nodeType===\"keyword\"){keywords[nodeKey].highlight=true;var categoryKeys=links[nodeKey];for(var index in categoryKeys){categories[categoryKeys[index]].highlight=true;}}if(nodeType===\"category\"){categories[nodeKey].highlight=true;for(var keyword in links){if(links[keyword].indexOf(nodeKey)>-1){keywords[keyword].highlight=true;}}}_this.setState({categories,keywords});};_this.mouseOutEvent=function(event){var container=event.target.getStage().container();container.style.cursor=\"default\";var _this$state4=_this.state,categories=_this$state4.categories,keywords=_this$state4.keywords;for(var category in categories){categories[category].highlight=false;}for(var keyword in keywords){keywords[keyword].highlight=false;}_this.setState({categories,keywords});};_this.stageHeight=1200;_this.stageWidth=900;_this.keywordNodeSize=20;_this.keywordNodeSpacing=30;_this.KeywordNodeX=150;_this.categoryNodeHeight=30;_this.categoryNodeWidth=200;_this.categoryNodeSpacing=20;_this.categoryNodeX=_this.stageWidth-_this.categoryNodeWidth-150;_this.lineColor=\"#003f5c\";_this.rectStrokeColor=\"black\";_this.rectFillColor=\"#dd5182\";_this.circleStrokeColor=\"black\";_this.circleFillColor=\"#E5AE19\";_this.highlightColor=\"#ffa600\";_this.textFontFamily='-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif';_this.state={data:[],isLoading:true,isData:true};return _this;}_createClass(ConceptMapContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({isLoding:true},function(){RestAPI.conceptChart().then(function(response){console.log(response);if(response.data.length===0){_this2.setState({isData:false});}var chartData=[];var dataLength=Math.min(response.data.length,5);for(var index=0;index<dataLength;index++){chartData.push({keyword:response.data[index].keyword,rank:response.data[index].weight,source:response.data[index].source,category:response.data[index].categories.map(function(item){return item.name;})});}_this2.setState({isLoding:false,data:chartData},_this2.extractNodes);}).catch(function(error){_this2.setState({isLoding:false});handleServerErrors(error,toast.error);});});}},{key:\"render\",value:function render(){var containerDiv=document.querySelectorAll(\".card-body\")[0];// const width = containerDiv ? containerDiv.clientWidth : this.stageWidth;\nvar width=this.stageWidth;var categories=this.state.categories;var highlighedCategory=[];if(categories){highlighedCategory=Object.keys(categories).filter(function(item){return categories[item].highlight;});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{id:\"conceptMapWrapper\"},this.state.isLoding?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\",style:{padding:\"20px\"}},/*#__PURE__*/React.createElement(Loader,{type:\"Puff\",color:\"#00BFFF\",height:100,width:100})):this.state.isData?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Stage,{width:width,height:this.stageHeight},/*#__PURE__*/React.createElement(Layer,null,this.getNodes())),/*#__PURE__*/React.createElement(\"div\",{align:\"center\"},highlighedCategory.length?highlighedCategory[0]:\"\"))):/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},\"No data is available at the moment\")));}}]);return ConceptMapContainer;}(Component);export default ConceptMapContainer;","map":{"version":3,"sources":["C:/Users/franc/Desktop/Interest-Miner/Frontend/src/components/ConceptMap/ConceptMapContainer.js"],"names":["React","Component","Stage","Layer","Rect","Text","Circle","Line","toast","Loader","RestAPI","handleServerErrors","ConceptMapContainer","props","toTitleCase","phrase","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","extractNodes","data","state","categories","keywords","links","index","length","keyword","keywordCategories","category","categoryIndex","setState","generateCoordinates","totalKeywords","Object","keys","KeywordBlockTotalSize","keywordNodeSpacing","keywordNodeSize","keywordStartOffset","parseInt","stageHeight","keywordCount","y","x","KeywordNodeX","totalCategories","categoriesBlockTotalSize","categoryNodeSpacing","categoryNodeHeight","categoriesStartOffset","categoryCount","categoryNodeX","getNodes","nodes","keywordKey","keywordLink","push","highlight","highlightColor","lineColor","circleFillColor","e","mouseOverEvent","mouseOutEvent","textFontFamily","categoryNodeWidth","rectFillColor","categoryText","event","nodeType","nodeKey","stage","target","getStage","container","style","cursor","categoryKeys","indexOf","stageWidth","rectStrokeColor","circleStrokeColor","isLoading","isData","isLoding","conceptChart","then","response","console","log","chartData","dataLength","Math","min","rank","weight","source","item","name","catch","error","containerDiv","document","querySelectorAll","width","highlighedCategory","filter","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from \"react-konva\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport RestAPI from \"services/api\";\n\nimport { handleServerErrors } from \"utils/errorHandler\";\n\nclass ConceptMapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stageHeight = 1200;\n    this.stageWidth = 900;\n\n    this.keywordNodeSize = 20;\n    this.keywordNodeSpacing = 30;\n    this.KeywordNodeX = 150;\n\n    this.categoryNodeHeight = 30;\n    this.categoryNodeWidth = 200;\n    this.categoryNodeSpacing = 20;\n    this.categoryNodeX = this.stageWidth - this.categoryNodeWidth - 150;\n\n    this.lineColor = \"#003f5c\";\n    this.rectStrokeColor = \"black\";\n    this.rectFillColor = \"#dd5182\";\n    this.circleStrokeColor = \"black\";\n    this.circleFillColor = \"#E5AE19\";\n\n    this.highlightColor = \"#ffa600\";\n\n    this.textFontFamily =\n      '-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif';\n\n    this.state = {\n      data: [],\n      isLoading: true,\n      isData: true,\n    };\n  }\n\n  toTitleCase = (phrase) => {\n    return phrase\n      .toLowerCase()\n      .split(\" \")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  componentDidMount() {\n    this.setState({ isLoding: true }, () => {\n      RestAPI.conceptChart()\n        .then((response) => {\n          console.log(response);\n          if (response.data.length === 0) {\n            this.setState({\n              isData: false,\n            });\n          }\n          let chartData = [];\n          let dataLength = Math.min(response.data.length, 5);\n          for (let index = 0; index < dataLength; index++) {\n            chartData.push({\n              keyword: response.data[index].keyword,\n              rank: response.data[index].weight,\n              source: response.data[index].source,\n              category: response.data[index].categories.map(\n                (item) => item.name\n              ),\n            });\n          }\n          this.setState(\n            {\n              isLoding: false,\n              data: chartData,\n            },\n            this.extractNodes\n          );\n        })\n        .catch((error) => {\n          this.setState({ isLoding: false });\n          handleServerErrors(error, toast.error);\n        });\n    });\n  }\n\n  extractNodes = () => {\n    const { data } = this.state;\n    let categories = {};\n    let keywords = {};\n    let links = {};\n    for (let index = 0; index < data.length; index++) {\n      const keyword = data[index].keyword;\n      const keywordCategories = data[index].category;\n      keywords[keyword] = {};\n      links[keyword] = keywordCategories;\n      for (\n        let categoryIndex = 0;\n        categoryIndex < keywordCategories.length;\n        categoryIndex++\n      ) {\n        categories[keywordCategories[categoryIndex]] = {};\n      }\n    }\n    this.setState({ keywords, categories, links }, this.generateCoordinates);\n  };\n\n  generateCoordinates = () => {\n    const { keywords, categories } = this.state;\n\n    const totalKeywords = Object.keys(keywords).length;\n    const KeywordBlockTotalSize =\n      totalKeywords * (this.keywordNodeSpacing + this.keywordNodeSize);\n    const keywordStartOffset = parseInt(\n      (this.stageHeight - KeywordBlockTotalSize) / 2\n    );\n\n    let keywordCount = 0;\n    for (let keyword in keywords) {\n      let y =\n        keywordStartOffset +\n        parseInt(this.keywordNodeSpacing / 2) +\n        keywordCount *\n          (parseInt(this.keywordNodeSpacing / 2) + this.keywordNodeSize);\n      keywordCount += 1;\n      keywords[keyword].x = this.KeywordNodeX;\n      keywords[keyword].y = y;\n    }\n\n    const totalCategories = Object.keys(categories).length;\n    const categoriesBlockTotalSize =\n      totalCategories * (this.categoryNodeSpacing + this.categoryNodeHeight);\n\n    const categoriesStartOffset = parseInt(\n      (this.stageHeight - categoriesBlockTotalSize) / 2\n    );\n\n    let categoryCount = 0;\n    for (let category in categories) {\n      let y =\n        categoriesStartOffset +\n        parseInt(this.categoryNodeSpacing / 2) +\n        categoryCount *\n          (parseInt(this.categoryNodeSpacing / 2) + this.categoryNodeHeight);\n      categoryCount += 1;\n      categories[category].x = this.categoryNodeX;\n      categories[category].y = y;\n    }\n\n    this.setState({ keywords, categories });\n  };\n\n  getNodes = () => {\n    const { keywords, categories, links } = this.state;\n    let nodes = [];\n\n    for (let keywordKey in links) {\n      const keywordLink = links[keywordKey];\n      const keyword = keywords[keywordKey];\n      for (let index in keywordLink) {\n        const category = categories[keywordLink[index]];\n        nodes.push(\n          <Line\n            points={[\n              keyword.x,\n              keyword.y,\n              category.x,\n              category.y + parseInt(this.categoryNodeHeight / 2),\n            ]}\n            tension={500}\n            stroke={\n              keyword.highlight && category.highlight\n                ? this.highlightColor\n                : this.lineColor\n            }\n          />\n        );\n      }\n    }\n\n    for (let keyword in keywords) {\n      nodes.push(\n        <Circle\n          key={keyword + \"circle\"}\n          x={keywords[keyword].x}\n          y={keywords[keyword].y}\n          radius={10}\n          fill={this.circleFillColor}\n          strokeWidth=\"3\"\n          onMouseOver={(e) => this.mouseOverEvent(e, \"keyword\", keyword)}\n          onMouseOut={(e) => this.mouseOutEvent(e, \"keyword\", keyword)}\n          stroke={\n            keywords[keyword].highlight\n              ? this.highlightColor\n              : this.circleFillColor\n          }\n        />\n      );\n      nodes.push(\n        <Text\n          key={keyword + \"text\"}\n          x={10}\n          y={keywords[keyword].y - 5}\n          text={this.toTitleCase(keyword)}\n          fontFamily={this.textFontFamily}\n        />\n      );\n    }\n\n    for (let category in categories) {\n      nodes.push(\n        <Rect\n          key={category + \"rect\"}\n          x={categories[category].x}\n          y={categories[category].y}\n          height={this.categoryNodeHeight}\n          width={this.categoryNodeWidth}\n          cornerRadius={10}\n          fill={this.rectFillColor}\n          onMouseOver={(e) => this.mouseOverEvent(e, \"category\", category)}\n          onMouseOut={(e) => this.mouseOutEvent(e, \"category\", category)}\n          strokeWidth=\"3\"\n          stroke={\n            categories[category].highlight\n              ? this.highlightColor\n              : this.rectFillColor\n          }\n        />\n      );\n      // add ellipsis to text after 10 chars\n      let categoryText =\n        category.length > 35 ? category.slice(0, 35) + \"...\" : category;\n      nodes.push(\n        <Text\n          key={category + \"text\"}\n          x={categories[category].x + 10}\n          y={categories[category].y + 10}\n          onMouseOver={(e) => this.mouseOverEvent(e, \"category\", category)}\n          onMouseOut={(e) => this.mouseOutEvent(e, \"category\", category)}\n          text={categoryText}\n          fontFamily={this.textFontFamily}\n          stroke=\"white\"\n          strokeWidth=\"1\"\n        />\n      );\n    }\n    return nodes;\n  };\n\n  mouseOverEvent = (event, nodeType, nodeKey) => {\n    const stage = event.target.getStage();\n    const container = stage.container();\n    container.style.cursor = \"pointer\";\n\n    let { categories, keywords, links } = this.state;\n    if (nodeType === \"keyword\") {\n      keywords[nodeKey].highlight = true;\n      let categoryKeys = links[nodeKey];\n\n      for (let index in categoryKeys) {\n        categories[categoryKeys[index]].highlight = true;\n      }\n    }\n\n    if (nodeType === \"category\") {\n      categories[nodeKey].highlight = true;\n\n      for (let keyword in links) {\n        if (links[keyword].indexOf(nodeKey) > -1) {\n          keywords[keyword].highlight = true;\n        }\n      }\n    }\n\n    this.setState({ categories, keywords });\n  };\n\n  mouseOutEvent = (event) => {\n    const container = event.target.getStage().container();\n    container.style.cursor = \"default\";\n\n    let { categories, keywords } = this.state;\n    for (let category in categories) {\n      categories[category].highlight = false;\n    }\n\n    for (let keyword in keywords) {\n      keywords[keyword].highlight = false;\n    }\n\n    this.setState({ categories, keywords });\n  };\n\n  render() {\n    const containerDiv = document.querySelectorAll(\".card-body\")[0];\n    // const width = containerDiv ? containerDiv.clientWidth : this.stageWidth;\n    const width = this.stageWidth;\n    const { categories } = this.state;\n    let highlighedCategory = [];\n    if (categories) {\n      highlighedCategory = Object.keys(categories).filter(\n        (item) => categories[item].highlight\n      );\n    }\n\n    return (\n      <>\n        <div id=\"conceptMapWrapper\">\n          {this.state.isLoding ? (\n            <div className=\"text-center\" style={{ padding: \"20px\" }}>\n              <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n            </div>\n          ) : this.state.isData ? (\n            <>\n              <div>\n                <Stage width={width} height={this.stageHeight}>\n                  <Layer>{this.getNodes()}</Layer>\n                </Stage>\n                <div align=\"center\">\n                  {highlighedCategory.length ? highlighedCategory[0] : \"\"}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              No data is available at the moment\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ConceptMapContainer;\n"]},"metadata":{},"sourceType":"module"}