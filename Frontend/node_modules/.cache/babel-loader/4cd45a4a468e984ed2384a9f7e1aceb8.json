{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport debounce from 'lodash.debounce';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { select, event } from 'd3-selection';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport 'd3-transition';\nimport { range, min, max, descending } from 'd3-array';\nimport d3Cloud from 'd3-cloud';\nimport clonedeep from 'lodash.clonedeep';\nimport seedrandom from 'seedrandom';\nimport tippy from 'tippy.js';\nimport { dispatch } from 'd3-dispatch';\nimport { scaleOrdinal, scaleLinear, scaleSqrt, scaleLog } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css';\n\nfunction useResponsiveSvgSelection(minSize, initialSize) {\n  var elementRef = useRef();\n\n  var _useState = useState(initialSize),\n      _useState2 = _slicedToArray(_useState, 2),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selection = _useState4[0],\n      setSelection = _useState4[1];\n\n  useEffect(function () {\n    var element = elementRef.current; // Set svg selection\n\n    var svg = select(element).append('svg').style('display', 'block'); // Native inline svg leaves undesired white space\n\n    var selection = svg.append('g');\n    setSelection(selection);\n\n    function updateSize(width, height) {\n      svg.attr('height', height).attr('width', width);\n      selection.attr('transform', \"translate(\".concat(width / 2, \", \").concat(height / 2, \")\"));\n      setSize([width, height]);\n    }\n\n    var width = 0;\n    var height = 0;\n\n    if (initialSize === undefined) {\n      // Use parentNode size if resized has not occurred\n      width = element.parentElement.offsetWidth;\n      height = element.parentElement.offsetHeight;\n    } else {\n      // Use initialSize if it is provided\n      var _initialSize = _slicedToArray(initialSize, 2);\n\n      width = _initialSize[0];\n      height = _initialSize[1];\n    }\n\n    width = Math.max(width, minSize[0]);\n    height = Math.max(height, minSize[1]);\n    updateSize(width, height); // Update resize using a resize observer\n\n    var resizeObserver = new ResizeObserver(function (entries) {\n      if (!entries || entries.length === 0) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        var _entries$0$contentRec = entries[0].contentRect,\n            _width = _entries$0$contentRec.width,\n            _height = _entries$0$contentRec.height;\n        updateSize(_width, _height);\n      }\n    });\n    resizeObserver.observe(element); // Cleanup\n\n    return function () {\n      resizeObserver.unobserve(element);\n      select(element).selectAll('*').remove();\n    };\n  }, [initialSize, minSize]);\n  return [elementRef, selection, size];\n} // @ts-nocheck\n\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nfunction Cloud() {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch('word', 'end'),\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n  var killed = false;\n\n  cloud.canvas = function (_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function () {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        tags = [],\n        data = words.map(function (d, i) {\n      d.text = text.call(this, d, i);\n      d.font = font.call(this, d, i);\n      d.style = fontStyle.call(this, d, i);\n      d.weight = fontWeight.call(this, d, i);\n      d.rotate = rotate.call(this, d, i);\n      d.size = ~~fontSize.call(this, d, i);\n      d.padding = padding.call(this, d, i);\n      return d;\n    }).sort(function (a, b) {\n      return b.size - a.size;\n    }); // Added by react-wordcloud\n    // Allows to calculate a subset of data instead of all of the words at once\n\n    function multiStep(from, to) {\n      for (var i = from; i < to; i += 1) {\n        var d = data[i];\n        d.x = size[0] * (random() + 0.5) >> 1;\n        d.y = size[1] * (random() + 0.5) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call('word', cloud, d);\n          if (bounds) cloudBounds(bounds, d);else bounds = [{\n            x: d.x + d.x0,\n            y: d.y + d.y0\n          }, {\n            x: d.x + d.x1,\n            y: d.y + d.y1\n          }]; // Temporary hack\n\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n    } // Added by react-wordcloud\n    // Iterates dataset using setTimeout in order to prevent blocking of the main thread\n\n\n    function loop(i) {\n      var step = 50;\n      var from = i * step;\n      var to = Math.min((i + 1) * step, words.length);\n      multiStep(from, to);\n\n      if (killed) {\n        return;\n      }\n\n      if (to < words.length) {\n        setTimeout(function () {\n          return loop(i + 1);\n        }, 0);\n      } else {\n        cloud.stop();\n        event.call('end', cloud, tags, bounds);\n      }\n    }\n\n    setTimeout(function () {\n      return loop(0);\n    }, 0);\n    return cloud;\n  };\n\n  cloud.revive = function () {\n    killed = false;\n    return cloud;\n  };\n\n  cloud.stop = function () {\n    killed = true;\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    var context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n    return {\n      context: context,\n      ratio: ratio\n    };\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{\n      x: 0,\n      y: 0\n    }, {\n      x: size[0],\n      y: size[1]\n    }],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < 0.5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.\n\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n\n          for (var j = 0; j < h; j++) {\n            last = 0;\n\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n\n            x += sw;\n          }\n\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  cloud.timeInterval = function (_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function (_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function (_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function (_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function (_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function (_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function (_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function (_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function (_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function (_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function (_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function (_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function () {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return 'serif';\n}\n\nfunction cloudFontNormal() {\n  return 'normal';\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n} // Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\n\n\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n    var w = c.measureText(d.text + 'm').width * ratio,\n        h = d.size << 1;\n\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n\n    if (h > maxh) maxh = h;\n\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0; // Zero the buffer\n\n    for (var i = 0; i < h * w32; i++) {\n      sprite[i] = 0;\n    }\n\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n} // Use mask-based collision detection.\n\n\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n\n  for (var j = 0; j < h; j++) {\n    last = 0;\n\n    for (var i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n\n    x += sw;\n  }\n\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function (t) {\n    var sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.\n\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n\n      case 1:\n        y += dy;\n        break;\n\n      case 2:\n        x -= dx;\n        break;\n\n      default:\n        y -= dy;\n        break;\n    }\n\n    return [x, y];\n  };\n}\n\nfunction zeroArray(n) {\n  var a = new Uint32Array(n);\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction functor(d) {\n  return typeof d === 'function' ? d : function () {\n    return d;\n  };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\nfunction choose(array, random) {\n  return array[Math.floor(random() * array.length)];\n}\n\nfunction getDefaultColors() {\n  return range(20).map(function (number) {\n    return number.toString();\n  }).map(scaleOrdinal(schemeCategory10));\n}\n\nfunction getFontScale(words, fontSizes, scale) {\n  var minSize = min(words, function (word) {\n    return Number(word.value);\n  });\n  var maxSize = max(words, function (word) {\n    return Number(word.value);\n  });\n  var scaleFunction;\n\n  switch (scale) {\n    case 'log':\n      scaleFunction = scaleLog;\n      break;\n\n    case 'sqrt':\n      scaleFunction = scaleSqrt;\n      break;\n\n    case 'linear':\n    default:\n      scaleFunction = scaleLinear;\n      break;\n  }\n\n  var fontScale = scaleFunction().domain([minSize, maxSize]).range(fontSizes);\n  return fontScale;\n}\n\nfunction getFontSize(word) {\n  return \"\".concat(word.size, \"px\");\n}\n\nfunction getText(word) {\n  return word.text;\n}\n\nfunction getTransform(word) {\n  var translate = \"translate(\".concat(word.x, \", \").concat(word.y, \")\");\n  var rotate = typeof word.rotate === 'number' ? \"rotate(\".concat(word.rotate, \")\") : '';\n  return translate + rotate;\n}\n\nfunction rotate(rotations, rotationAngles, random) {\n  if (rotations < 1) {\n    return 0;\n  }\n\n  var angles = [];\n\n  if (rotations === 1) {\n    angles = [rotationAngles[0]];\n  } else {\n    angles = _toConsumableArray(rotationAngles);\n    var increment = (rotationAngles[1] - rotationAngles[0]) / (rotations - 1);\n    var angle = rotationAngles[0] + increment;\n\n    while (angle < rotationAngles[1]) {\n      angles.push(angle);\n      angle += increment;\n    }\n  }\n\n  return choose(angles, random);\n}\n\nfunction render(_ref) {\n  var callbacks = _ref.callbacks,\n      options = _ref.options,\n      random = _ref.random,\n      selection = _ref.selection,\n      words = _ref.words;\n  var getWordColor = callbacks.getWordColor,\n      getWordTooltip = callbacks.getWordTooltip,\n      onWordClick = callbacks.onWordClick,\n      onWordMouseOver = callbacks.onWordMouseOver,\n      onWordMouseOut = callbacks.onWordMouseOut;\n  var colors = options.colors,\n      enableTooltip = options.enableTooltip,\n      fontStyle = options.fontStyle,\n      fontWeight = options.fontWeight;\n  var fontFamily = options.fontFamily,\n      transitionDuration = options.transitionDuration;\n\n  function getFill(word) {\n    return getWordColor ? getWordColor(word) : choose(colors, random);\n  } // Load words\n\n\n  var tooltipInstance;\n  var vizWords = selection.selectAll('text').data(words);\n  vizWords.join(function (enter) {\n    return enter.append('text').on('click', function (word) {\n      if (onWordClick) {\n        onWordClick(word, event);\n      }\n    }).on('mouseover', function (word) {\n      if (enableTooltip) {\n        tooltipInstance = tippy(event.target, {\n          animation: 'scale',\n          arrow: true,\n          content: function content() {\n            return getWordTooltip(word);\n          }\n        });\n      }\n\n      if (onWordMouseOver) {\n        onWordMouseOver(word, event);\n      }\n    }).on('mouseout', function (word) {\n      if (tooltipInstance) {\n        tooltipInstance.destroy();\n      }\n\n      if (onWordMouseOut) {\n        onWordMouseOut(word, event);\n      }\n    }).attr('cursor', onWordClick ? 'pointer' : 'default').attr('fill', getFill).attr('font-family', fontFamily).attr('font-style', fontStyle).attr('font-weight', fontWeight).attr('text-anchor', 'middle').attr('transform', 'translate(0, 0) rotate(0)').call(function (enter) {\n      return enter.transition().duration(transitionDuration).attr('font-size', getFontSize).attr('transform', getTransform).text(getText);\n    });\n  }, function (update) {\n    return update.transition().duration(transitionDuration).attr('fill', getFill).attr('font-family', fontFamily).attr('font-size', getFontSize).attr('transform', getTransform).text(getText);\n  }, function (exit) {\n    return exit.transition().duration(transitionDuration).attr('fill-opacity', 0).remove();\n  });\n}\n\nfunction layout(_ref2) {\n  var callbacks = _ref2.callbacks,\n      maxWords = _ref2.maxWords,\n      options = _ref2.options,\n      selection = _ref2.selection,\n      size = _ref2.size,\n      words = _ref2.words;\n  var MAX_LAYOUT_ATTEMPTS = 10;\n  var SHRINK_FACTOR = 0.95;\n  var deterministic = options.deterministic,\n      enableOptimizations = options.enableOptimizations,\n      fontFamily = options.fontFamily,\n      fontStyle = options.fontStyle,\n      fontSizes = options.fontSizes,\n      fontWeight = options.fontWeight,\n      padding = options.padding,\n      randomSeed = options.randomSeed,\n      rotations = options.rotations,\n      rotationAngles = options.rotationAngles,\n      spiral = options.spiral,\n      scale = options.scale;\n  var sortedWords = words.concat().sort(function (x, y) {\n    return descending(x.value, y.value);\n  }).slice(0, maxWords);\n  var random = seedrandom(deterministic ? randomSeed || 'deterministic' : null);\n  var cloud;\n\n  if (enableOptimizations) {\n    cloud = Cloud();\n  } else {\n    cloud = d3Cloud();\n  }\n\n  cloud.size(size).padding(padding).words(clonedeep(sortedWords)).rotate(function () {\n    if (rotations === undefined) {\n      // Default rotation algorithm\n      return (~~(random() * 6) - 3) * 30;\n    }\n\n    return rotate(rotations, rotationAngles, random);\n  }).spiral(spiral).random(random).text(getText).font(fontFamily).fontStyle(fontStyle).fontWeight(fontWeight);\n\n  function draw(fontSizes) {\n    var attempts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if (enableOptimizations) {\n      cloud.revive();\n    }\n\n    cloud.fontSize(function (word) {\n      var fontScale = getFontScale(sortedWords, fontSizes, scale);\n      return fontScale(word.value);\n    }).on('end', function (computedWords) {\n      /** KNOWN ISSUE: https://github.com/jasondavies/d3-cloud/issues/36\n       * Recursively layout and decrease font-sizes by a SHRINK_FACTOR.\n       * Bail out with a warning message after MAX_LAYOUT_ATTEMPTS.\n       */\n      if (sortedWords.length !== computedWords.length && attempts <= MAX_LAYOUT_ATTEMPTS) {\n        if (attempts === MAX_LAYOUT_ATTEMPTS) {\n          console.warn(\"Unable to layout \".concat(sortedWords.length - computedWords.length, \" word(s) after \").concat(attempts, \" attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.\"));\n        }\n\n        var minFontSize = Math.max(fontSizes[0] * SHRINK_FACTOR, 1);\n        var maxFontSize = Math.max(fontSizes[1] * SHRINK_FACTOR, minFontSize);\n        draw([minFontSize, maxFontSize], attempts + 1);\n      } else {\n        render({\n          callbacks,\n          options,\n          random,\n          selection,\n          words: computedWords\n        });\n      }\n    }).start();\n  }\n\n  draw(fontSizes);\n}\n\nvar defaultCallbacks = {\n  getWordTooltip: function getWordTooltip(_ref3) {\n    var text = _ref3.text,\n        value = _ref3.value;\n    return \"\".concat(text, \" (\").concat(value, \")\");\n  }\n};\nvar defaultOptions = {\n  colors: getDefaultColors(),\n  deterministic: false,\n  enableOptimizations: false,\n  enableTooltip: true,\n  fontFamily: 'times new roman',\n  fontSizes: [4, 32],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotationAngles: [-90, 90],\n  scale: 'sqrt',\n  spiral: 'rectangular',\n  transitionDuration: 600\n};\n\nfunction ReactWordCloud(_ref4) {\n  var callbacks = _ref4.callbacks,\n      _ref4$maxWords = _ref4.maxWords,\n      maxWords = _ref4$maxWords === void 0 ? 100 : _ref4$maxWords,\n      minSize = _ref4.minSize,\n      options = _ref4.options,\n      initialSize = _ref4.size,\n      words = _ref4.words;\n\n  var mergedCallbacks = _objectSpread(_objectSpread({}, defaultCallbacks), callbacks);\n\n  var mergedOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n\n  var _useResponsiveSvgSele = useResponsiveSvgSelection(minSize, initialSize),\n      _useResponsiveSvgSele2 = _slicedToArray(_useResponsiveSvgSele, 3),\n      ref = _useResponsiveSvgSele2[0],\n      selection = _useResponsiveSvgSele2[1],\n      size = _useResponsiveSvgSele2[2];\n\n  var render = useRef(debounce(layout, 100));\n  useEffect(function () {\n    if (selection) {\n      render.current({\n        callbacks: mergedCallbacks,\n        maxWords,\n        options: mergedOptions,\n        selection,\n        size,\n        words\n      });\n    }\n  }, [maxWords, mergedCallbacks, mergedOptions, selection, size, words]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  });\n}\n\nReactWordCloud.defaultProps = {\n  callbacks: defaultCallbacks,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: defaultOptions\n};\nexport default ReactWordCloud;\nexport { defaultCallbacks, defaultOptions };","map":{"version":3,"sources":["C:/Users/franc/Desktop/Interest-Miner/Frontend/node_modules/react-wordcloud/dist/index.module.js"],"names":["debounce","React","useRef","useState","useEffect","select","event","ResizeObserver","range","min","max","descending","d3Cloud","clonedeep","seedrandom","tippy","dispatch","scaleOrdinal","scaleLinear","scaleSqrt","scaleLog","schemeCategory10","useResponsiveSvgSelection","minSize","initialSize","elementRef","size","setSize","selection","setSelection","element","current","svg","append","style","updateSize","width","height","attr","undefined","parentElement","offsetWidth","offsetHeight","Math","resizeObserver","entries","length","contentRect","observe","unobserve","selectAll","remove","cloudRadians","PI","cw","ch","Cloud","text","cloudText","font","cloudFont","fontSize","cloudFontSize","fontStyle","cloudFontNormal","fontWeight","rotate","cloudRotate","padding","cloudPadding","spiral","archimedeanSpiral","words","timeInterval","Infinity","random","cloud","canvas","cloudCanvas","killed","_","arguments","functor","start","contextAndRatio","getContext","board","zeroArray","bounds","n","tags","data","map","d","i","call","weight","sort","a","b","multiStep","from","to","x","y","cloudSprite","hasText","place","push","cloudBounds","x0","y0","x1","y1","loop","step","setTimeout","stop","revive","ratio","sqrt","getImageData","context","fillStyle","strokeStyle","textAlign","tag","perimeter","startX","startY","maxDelta","s","dt","t","dxdy","dx","dy","abs","cloudCollide","collideRects","sprite","w","sw","lx","sx","msx","h","last","j","spirals","on","value","apply","di","c","clearRect","maxh","save","measureText","sr","sin","cr","cos","wcr","wsr","hcr","hsr","translate","fillText","lineWidth","strokeText","restore","xoff","yoff","pixels","w32","seen","seenRow","k","m","slice","b0","b1","e","rectangularSpiral","sign","Uint32Array","document","createElement","archimedean","rectangular","choose","array","floor","getDefaultColors","number","toString","getFontScale","fontSizes","scale","word","Number","maxSize","scaleFunction","fontScale","domain","getFontSize","getText","getTransform","rotations","rotationAngles","angles","increment","angle","render","callbacks","options","getWordColor","getWordTooltip","onWordClick","onWordMouseOver","onWordMouseOut","colors","enableTooltip","fontFamily","transitionDuration","getFill","tooltipInstance","vizWords","join","enter","target","animation","arrow","content","destroy","transition","duration","update","exit","layout","maxWords","MAX_LAYOUT_ATTEMPTS","SHRINK_FACTOR","deterministic","enableOptimizations","randomSeed","sortedWords","concat","draw","attempts","computedWords","console","warn","minFontSize","maxFontSize","defaultCallbacks","defaultOptions","ReactWordCloud","mergedCallbacks","mergedOptions","ref","defaultProps"],"mappings":"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","sourcesContent":["import debounce from 'lodash.debounce';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { select, event } from 'd3-selection';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport 'd3-transition';\nimport { range, min, max, descending } from 'd3-array';\nimport d3Cloud from 'd3-cloud';\nimport clonedeep from 'lodash.clonedeep';\nimport seedrandom from 'seedrandom';\nimport tippy from 'tippy.js';\nimport { dispatch } from 'd3-dispatch';\nimport { scaleOrdinal, scaleLinear, scaleSqrt, scaleLog } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css';\n\nfunction useResponsiveSvgSelection(minSize, initialSize) {\n  const elementRef = useRef();\n  const [size, setSize] = useState(initialSize);\n  const [selection, setSelection] = useState(null);\n  useEffect(() => {\n    const element = elementRef.current; // Set svg selection\n\n    const svg = select(element).append('svg').style('display', 'block'); // Native inline svg leaves undesired white space\n\n    const selection = svg.append('g');\n    setSelection(selection);\n\n    function updateSize(width, height) {\n      svg.attr('height', height).attr('width', width);\n      selection.attr('transform', `translate(${width / 2}, ${height / 2})`);\n      setSize([width, height]);\n    }\n\n    let width = 0;\n    let height = 0;\n\n    if (initialSize === undefined) {\n      // Use parentNode size if resized has not occurred\n      width = element.parentElement.offsetWidth;\n      height = element.parentElement.offsetHeight;\n    } else {\n      // Use initialSize if it is provided\n      [width, height] = initialSize;\n    }\n\n    width = Math.max(width, minSize[0]);\n    height = Math.max(height, minSize[1]);\n    updateSize(width, height); // Update resize using a resize observer\n\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!entries || entries.length === 0) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        const {\n          width,\n          height\n        } = entries[0].contentRect;\n        updateSize(width, height);\n      }\n    });\n    resizeObserver.observe(element); // Cleanup\n\n    return () => {\n      resizeObserver.unobserve(element);\n      select(element).selectAll('*').remove();\n    };\n  }, [initialSize, minSize]);\n  return [elementRef, selection, size];\n}\n\n// @ts-nocheck\nconst cloudRadians = Math.PI / 180,\n      cw = 1 << 11 >> 5,\n      ch = 1 << 11;\nfunction Cloud() {\n  let size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch('word', 'end'),\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n  let killed = false;\n\n  cloud.canvas = function (_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function () {\n    let contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        tags = [],\n        data = words.map(function (d, i) {\n      d.text = text.call(this, d, i);\n      d.font = font.call(this, d, i);\n      d.style = fontStyle.call(this, d, i);\n      d.weight = fontWeight.call(this, d, i);\n      d.rotate = rotate.call(this, d, i);\n      d.size = ~~fontSize.call(this, d, i);\n      d.padding = padding.call(this, d, i);\n      return d;\n    }).sort(function (a, b) {\n      return b.size - a.size;\n    }); // Added by react-wordcloud\n    // Allows to calculate a subset of data instead of all of the words at once\n\n    function multiStep(from, to) {\n      for (let i = from; i < to; i += 1) {\n        const d = data[i];\n        d.x = size[0] * (random() + 0.5) >> 1;\n        d.y = size[1] * (random() + 0.5) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call('word', cloud, d);\n          if (bounds) cloudBounds(bounds, d);else bounds = [{\n            x: d.x + d.x0,\n            y: d.y + d.y0\n          }, {\n            x: d.x + d.x1,\n            y: d.y + d.y1\n          }]; // Temporary hack\n\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n    } // Added by react-wordcloud\n    // Iterates dataset using setTimeout in order to prevent blocking of the main thread\n\n\n    function loop(i) {\n      const step = 50;\n      const from = i * step;\n      const to = Math.min((i + 1) * step, words.length);\n      multiStep(from, to);\n\n      if (killed) {\n        return;\n      }\n\n      if (to < words.length) {\n        setTimeout(() => loop(i + 1), 0);\n      } else {\n        cloud.stop();\n        event.call('end', cloud, tags, bounds);\n      }\n    }\n\n    setTimeout(() => loop(0), 0);\n    return cloud;\n  };\n\n  cloud.revive = () => {\n    killed = false;\n    return cloud;\n  };\n\n  cloud.stop = function () {\n\n    killed = true;\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    const context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n    return {\n      context: context,\n      ratio: ratio\n    };\n  }\n\n  function place(board, tag, bounds) {\n    let perimeter = [{\n      x: 0,\n      y: 0\n    }, {\n      x: size[0],\n      y: size[1]\n    }],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < 0.5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.\n\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n\n          for (let j = 0; j < h; j++) {\n            last = 0;\n\n            for (let i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n\n            x += sw;\n          }\n\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  cloud.timeInterval = function (_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function (_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function (_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function (_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function (_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function (_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function (_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function (_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function (_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function (_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function (_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function (_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function () {\n    const value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return 'serif';\n}\n\nfunction cloudFontNormal() {\n  return 'normal';\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n} // Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\n\n\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  const c = contextAndRatio.context,\n        ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  let x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n    var w = c.measureText(d.text + 'm').width * ratio,\n        h = d.size << 1;\n\n    if (d.rotate) {\n      const sr = Math.sin(d.rotate * cloudRadians),\n            cr = Math.cos(d.rotate * cloudRadians),\n            wcr = w * cr,\n            wsr = w * sr,\n            hcr = h * cr,\n            hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n\n    if (h > maxh) maxh = h;\n\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n\n  const pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n        sprite = [];\n\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0; // Zero the buffer\n\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    let seen = 0,\n        seenRow = -1;\n\n    for (let j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        const k = w32 * j + (i >> 5),\n              m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n} // Use mask-based collision detection.\n\n\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  let sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n\n  for (let j = 0; j < h; j++) {\n    last = 0;\n\n    for (let i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n\n    x += sw;\n  }\n\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  const b0 = bounds[0],\n        b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  const e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  let dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function (t) {\n    const sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.\n\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n\n      case 1:\n        y += dy;\n        break;\n\n      case 2:\n        x -= dx;\n        break;\n\n      default:\n        y -= dy;\n        break;\n    }\n\n    return [x, y];\n  };\n}\n\nfunction zeroArray(n) {\n  const a = new Uint32Array(n);\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction functor(d) {\n  return typeof d === 'function' ? d : function () {\n    return d;\n  };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\nfunction choose(array, random) {\n  return array[Math.floor(random() * array.length)];\n}\nfunction getDefaultColors() {\n  return range(20).map(number => number.toString()).map(scaleOrdinal(schemeCategory10));\n}\nfunction getFontScale(words, fontSizes, scale) {\n  const minSize = min(words, word => Number(word.value));\n  const maxSize = max(words, word => Number(word.value));\n  let scaleFunction;\n\n  switch (scale) {\n    case 'log':\n      scaleFunction = scaleLog;\n      break;\n\n    case 'sqrt':\n      scaleFunction = scaleSqrt;\n      break;\n\n    case 'linear':\n    default:\n      scaleFunction = scaleLinear;\n      break;\n  }\n\n  const fontScale = scaleFunction().domain([minSize, maxSize]).range(fontSizes);\n  return fontScale;\n}\nfunction getFontSize(word) {\n  return `${word.size}px`;\n}\nfunction getText(word) {\n  return word.text;\n}\nfunction getTransform(word) {\n  const translate = `translate(${word.x}, ${word.y})`;\n  const rotate = typeof word.rotate === 'number' ? `rotate(${word.rotate})` : '';\n  return translate + rotate;\n}\nfunction rotate(rotations, rotationAngles, random) {\n  if (rotations < 1) {\n    return 0;\n  }\n\n  let angles = [];\n\n  if (rotations === 1) {\n    angles = [rotationAngles[0]];\n  } else {\n    angles = [...rotationAngles];\n    const increment = (rotationAngles[1] - rotationAngles[0]) / (rotations - 1);\n    let angle = rotationAngles[0] + increment;\n\n    while (angle < rotationAngles[1]) {\n      angles.push(angle);\n      angle += increment;\n    }\n  }\n\n  return choose(angles, random);\n}\n\nfunction render({\n  callbacks,\n  options,\n  random,\n  selection,\n  words\n}) {\n  const {\n    getWordColor,\n    getWordTooltip,\n    onWordClick,\n    onWordMouseOver,\n    onWordMouseOut\n  } = callbacks;\n  const {\n    colors,\n    enableTooltip,\n    fontStyle,\n    fontWeight\n  } = options;\n  const {\n    fontFamily,\n    transitionDuration\n  } = options;\n\n  function getFill(word) {\n    return getWordColor ? getWordColor(word) : choose(colors, random);\n  } // Load words\n\n\n  let tooltipInstance;\n  const vizWords = selection.selectAll('text').data(words);\n  vizWords.join(enter => enter.append('text').on('click', word => {\n    if (onWordClick) {\n      onWordClick(word, event);\n    }\n  }).on('mouseover', word => {\n    if (enableTooltip) {\n      tooltipInstance = tippy(event.target, {\n        animation: 'scale',\n        arrow: true,\n        content: () => getWordTooltip(word)\n      });\n    }\n\n    if (onWordMouseOver) {\n      onWordMouseOver(word, event);\n    }\n  }).on('mouseout', word => {\n    if (tooltipInstance) {\n      tooltipInstance.destroy();\n    }\n\n    if (onWordMouseOut) {\n      onWordMouseOut(word, event);\n    }\n  }).attr('cursor', onWordClick ? 'pointer' : 'default').attr('fill', getFill).attr('font-family', fontFamily).attr('font-style', fontStyle).attr('font-weight', fontWeight).attr('text-anchor', 'middle').attr('transform', 'translate(0, 0) rotate(0)').call(enter => enter.transition().duration(transitionDuration).attr('font-size', getFontSize).attr('transform', getTransform).text(getText)), update => update.transition().duration(transitionDuration).attr('fill', getFill).attr('font-family', fontFamily).attr('font-size', getFontSize).attr('transform', getTransform).text(getText), exit => exit.transition().duration(transitionDuration).attr('fill-opacity', 0).remove());\n}\nfunction layout({\n  callbacks,\n  maxWords,\n  options,\n  selection,\n  size,\n  words\n}) {\n  const MAX_LAYOUT_ATTEMPTS = 10;\n  const SHRINK_FACTOR = 0.95;\n  const {\n    deterministic,\n    enableOptimizations,\n    fontFamily,\n    fontStyle,\n    fontSizes,\n    fontWeight,\n    padding,\n    randomSeed,\n    rotations,\n    rotationAngles,\n    spiral,\n    scale\n  } = options;\n  const sortedWords = words.concat().sort((x, y) => descending(x.value, y.value)).slice(0, maxWords);\n  const random = seedrandom(deterministic ? randomSeed || 'deterministic' : null);\n  let cloud;\n\n  if (enableOptimizations) {\n    cloud = Cloud();\n  } else {\n    cloud = d3Cloud();\n  }\n\n  cloud.size(size).padding(padding).words(clonedeep(sortedWords)).rotate(() => {\n    if (rotations === undefined) {\n      // Default rotation algorithm\n      return (~~(random() * 6) - 3) * 30;\n    }\n\n    return rotate(rotations, rotationAngles, random);\n  }).spiral(spiral).random(random).text(getText).font(fontFamily).fontStyle(fontStyle).fontWeight(fontWeight);\n\n  function draw(fontSizes, attempts = 1) {\n    if (enableOptimizations) {\n      cloud.revive();\n    }\n\n    cloud.fontSize(word => {\n      const fontScale = getFontScale(sortedWords, fontSizes, scale);\n      return fontScale(word.value);\n    }).on('end', computedWords => {\n      /** KNOWN ISSUE: https://github.com/jasondavies/d3-cloud/issues/36\n       * Recursively layout and decrease font-sizes by a SHRINK_FACTOR.\n       * Bail out with a warning message after MAX_LAYOUT_ATTEMPTS.\n       */\n      if (sortedWords.length !== computedWords.length && attempts <= MAX_LAYOUT_ATTEMPTS) {\n        if (attempts === MAX_LAYOUT_ATTEMPTS) {\n          console.warn(`Unable to layout ${sortedWords.length - computedWords.length} word(s) after ${attempts} attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.`);\n        }\n\n        const minFontSize = Math.max(fontSizes[0] * SHRINK_FACTOR, 1);\n        const maxFontSize = Math.max(fontSizes[1] * SHRINK_FACTOR, minFontSize);\n        draw([minFontSize, maxFontSize], attempts + 1);\n      } else {\n        render({\n          callbacks,\n          options,\n          random,\n          selection,\n          words: computedWords\n        });\n      }\n    }).start();\n  }\n\n  draw(fontSizes);\n}\n\nconst defaultCallbacks = {\n  getWordTooltip: ({\n    text,\n    value\n  }) => `${text} (${value})`\n};\nconst defaultOptions = {\n  colors: getDefaultColors(),\n  deterministic: false,\n  enableOptimizations: false,\n  enableTooltip: true,\n  fontFamily: 'times new roman',\n  fontSizes: [4, 32],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotationAngles: [-90, 90],\n  scale: 'sqrt',\n  spiral: 'rectangular',\n  transitionDuration: 600\n};\n\nfunction ReactWordCloud({\n  callbacks,\n  maxWords = 100,\n  minSize,\n  options,\n  size: initialSize,\n  words\n}) {\n  const mergedCallbacks = { ...defaultCallbacks,\n    ...callbacks\n  };\n  const mergedOptions = { ...defaultOptions,\n    ...options\n  };\n  const [ref, selection, size] = useResponsiveSvgSelection(minSize, initialSize);\n  const render = useRef(debounce(layout, 100));\n  useEffect(() => {\n    if (selection) {\n      render.current({\n        callbacks: mergedCallbacks,\n        maxWords,\n        options: mergedOptions,\n        selection,\n        size,\n        words\n      });\n    }\n  }, [maxWords, mergedCallbacks, mergedOptions, selection, size, words]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  });\n}\n\nReactWordCloud.defaultProps = {\n  callbacks: defaultCallbacks,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: defaultOptions\n};\n\nexport default ReactWordCloud;\nexport { defaultCallbacks, defaultOptions };\n"]},"metadata":{},"sourceType":"module"}