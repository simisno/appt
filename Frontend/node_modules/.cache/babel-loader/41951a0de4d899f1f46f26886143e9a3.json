{"ast":null,"code":"import{toast}from'react-toastify';export var handleServerErrors=function handleServerErrors(error,enqueueSnackbar){var defaultMsg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"Something went wrong. Try again.\";try{if(error&&error.response&&error.response.status===401){// enqueueSnackbar(\"Session expired. Login Again\");\n}else if(error&&error.response&&error.response.status===400&&error.response.data){var error_data=getErrorData(error.response.message?error.response.message:error);var error_message=defaultMsg;var error_key=Object.keys(error_data)[0]||\"\";if(typeof error_data==='object')error_message=\"\".concat(titleCase(error_key.replace(/_/g,' ')),\": \").concat(error_data[error_key]);else error_message=error_data;enqueueSnackbar(error_message,{position:toast.POSITION.TOP_RIGHT,autoClose:5000});}else{enqueueSnackbar(defaultMsg,{position:toast.POSITION.TOP_RIGHT,autoClose:5000});}}catch(error){enqueueSnackbar(defaultMsg,{position:toast.POSITION.TOP_RIGHT,autoClose:5000});}};var getErrorData=function getErrorData(error){var error_data=[];if(error.response.data.message&&Object.keys(error.response.data.message).length){error_data=error.response.data.message;}else if(Object.keys(error.response.data).length){error_data=error.response.data;}return error_data;};export var titleCase=function titleCase(string){var sentence=string.toLowerCase().split(\" \");for(var i=0;i<sentence.length;i++){sentence[i]=sentence[i][0].toUpperCase()+sentence[i].slice(1);}if(sentence[0]==='Address'){return sentence[0];}else{return sentence.join(\" \");}};","map":{"version":3,"sources":["C:/Users/franc/Desktop/Interest-Miner/Frontend/src/utils/errorHandler.js"],"names":["toast","handleServerErrors","error","enqueueSnackbar","defaultMsg","response","status","data","error_data","getErrorData","message","error_message","error_key","Object","keys","titleCase","replace","position","POSITION","TOP_RIGHT","autoClose","length","string","sentence","toLowerCase","split","i","toUpperCase","slice","join"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify';\n\nexport const handleServerErrors = (error, enqueueSnackbar, defaultMsg = \"Something went wrong. Try again.\") => {\n    try {\n        if (error && error.response && error.response.status === 401) {\n            // enqueueSnackbar(\"Session expired. Login Again\");\n        } else if (error && error.response && error.response.status === 400 && error.response.data) {\n            const error_data = getErrorData(error.response.message ? error.response.message : error);\n            let error_message = defaultMsg;\n            const error_key = Object.keys(error_data)[0] || \"\";\n            if (typeof error_data === 'object') error_message = `${titleCase(error_key.replace(/_/g, ' '))}: ${error_data[error_key]}`;\n            else error_message = error_data\n            enqueueSnackbar(error_message, { position: toast.POSITION.TOP_RIGHT, autoClose: 5000 });\n        } else {\n            enqueueSnackbar(defaultMsg, { position: toast.POSITION.TOP_RIGHT, autoClose: 5000 });\n        }\n    } catch (error) {\n        enqueueSnackbar(defaultMsg, { position: toast.POSITION.TOP_RIGHT, autoClose: 5000 });\n    }\n\n\n}\n\nconst getErrorData = (error) => {\n    let error_data = [];\n    if (error.response.data.message && Object.keys(error.response.data.message).length) {\n        error_data = error.response.data.message;\n    } else if (Object.keys(error.response.data).length) {\n        error_data = error.response.data;\n    }\n    return error_data;\n}\n\nexport const titleCase = (string) => {\n    var sentence = string.toLowerCase().split(\" \");\n    for (var i = 0; i < sentence.length; i++) {\n        sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n    }\n    if (sentence[0] === 'Address') {\n        return sentence[0]\n    }\n    else {\n        return sentence.join(\" \");\n    }\n}"]},"metadata":{},"sourceType":"module"}