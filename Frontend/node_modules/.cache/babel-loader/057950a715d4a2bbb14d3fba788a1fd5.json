{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\src\\\\components\\\\Chart\\\\CloudChart.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport RestAPI from \"services/api\";\nimport \"d3-transition\";\nimport { handleServerErrors } from \"utils/errorHandler\";\nimport { Modal, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport ReactWordcloud from \"react-wordcloud\";\n/* Chart code */\n// Themes begin\n// Themes end\n\nvar options = {\n  colors: [\"#0000CC\", \"#CC00CC\"],\n  enableTooltip: true,\n  deterministic: true,\n  fontFamily: \"impact\",\n  fontSizes: [14, 60],\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  padding: 3,\n  rotations: 2,\n  rotationAngles: [0, 90],\n  scale: \"sqrt\",\n  spiral: \"archimedean\",\n  transitionDuration: 0\n};\n\nvar CloudChartPage = /*#__PURE__*/function (_Component) {\n  _inherits(CloudChartPage, _Component);\n\n  var _super = _createSuper(CloudChartPage);\n\n  function CloudChartPage() {\n    var _this;\n\n    _classCallCheck(this, CloudChartPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      mydata: [],\n      wordArray: [],\n      isModalLoader: false,\n      isTweetData: false,\n      isPaperData: false,\n      tweetIds: [],\n      userPageIDs: [],\n      isData: true,\n      title: \"\",\n      url: \"\",\n      year: \"\",\n      abstract: \"\"\n    };\n\n    _this.getCallback = function (callback) {\n      var reactRef = _assertThisInitialized(_this);\n\n      return function (word, event) {\n        reactRef.setState({\n          modal: true,\n          isModalLoader: true\n        });\n\n        if (word.tweet_ids) {\n          reactRef.setState({\n            isTweetData: true,\n            tweetIds: word.tweet_ids\n          });\n\n          if (word.tweet_ids.length === 0) {\n            reactRef.setState({\n              isTweetData: false\n            });\n          }\n        }\n\n        if (word.papers) {\n          reactRef.setState({\n            isPaperData: true,\n            userPageIDs: word.papers\n          });\n\n          if (word.papers.length === 0) {\n            reactRef.setState({\n              isPaperData: false\n            });\n          }\n        }\n\n        reactRef.setState({\n          isModalLoader: false\n        });\n      };\n    };\n\n    _this.toggle = function (id) {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CloudChartPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoding: true\n      }, function () {\n        RestAPI.cloudChart().then(function (response) {\n          var keywordArray = [];\n\n          for (var i = 0; i < response.data.length; i++) {\n            keywordArray.push({\n              text: response.data[i].keyword,\n              value: response.data[i].weight,\n              tweet_ids: response.data[i].tweet_ids,\n              papers: response.data[i].papers,\n              source: response.data[i].source\n            });\n          }\n\n          if (response.data.length === 0) {\n            _this2.setState({\n              isData: false\n            });\n          }\n\n          _this2.setState({\n            isLoding: false,\n            wordArray: keywordArray\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            isLoding: false\n          });\n\n          handleServerErrors(error, toast.error);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var callbacks = {\n        getWordTooltip: function getWordTooltip(word) {\n          return \"\".concat(word.source);\n        },\n        onWordClick: this.getCallback(\"onWordClick\")\n      };\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, this.state.isLoding ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      })) : this.state.isData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ReactWordcloud, {\n        options: options,\n        callbacks: callbacks,\n        words: this.state.wordArray,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }))) :\n      /*#__PURE__*/\n      // <div id=\"chartdiv\" style={{ width: \"100%\", height: \"1000px\" }}></div>\n      React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, \"No Data Found\"), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        size: \"lg\",\n        id: \"modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, \"Papers\"), /*#__PURE__*/React.createElement(Tab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, \"Tweets\")), /*#__PURE__*/React.createElement(TabPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, this.state.isModalLoader ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 1000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isPaperData ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.userPageIDs.map(function (data, idx) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }\n        }, \"Title: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 54\n          }\n        }, data.title), /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }\n        }, \"Year: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 53\n          }\n        }, data.year), /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }\n        }, \"URL: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 52\n          }\n        }, data.url), /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }\n        }, \"Abstract: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 57\n          }\n        }, data.abstract));\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, \"No matching papers found\")))), /*#__PURE__*/React.createElement(TabPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, this.state.isModalLoader ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isTweetData ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.tweetIds.map(function (data, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TwitterTweetEmbed, {\n          tweetId: data,\n          placeholder: /*#__PURE__*/React.createElement(Loader, {\n            type: \"Puff\",\n            color: \"#00BFFF\",\n            height: 100,\n            style: {\n              padding: \"200px 0px\"\n            },\n            width: 100,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }\n          }),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }\n        }));\n      })) : /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 23\n        }\n      }, \"No matching tweets found\", \" \"))))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, \"OK\"))));\n    }\n  }]);\n\n  return CloudChartPage;\n}(Component);\n\nexport default CloudChartPage;","map":{"version":3,"sources":["C:/Users/franc/Desktop/Interest-Miner/Frontend/src/components/Chart/CloudChart.js"],"names":["React","Component","Fragment","toast","Loader","RestAPI","handleServerErrors","Modal","ModalBody","ModalFooter","Button","TwitterTweetEmbed","Tab","Tabs","TabList","TabPanel","ReactWordcloud","options","colors","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","CloudChartPage","state","mydata","wordArray","isModalLoader","isTweetData","isPaperData","tweetIds","userPageIDs","isData","title","url","year","abstract","getCallback","callback","reactRef","word","event","setState","modal","tweet_ids","length","papers","toggle","id","isLoding","cloudChart","then","response","keywordArray","i","data","push","text","keyword","value","weight","source","catch","error","callbacks","getWordTooltip","onWordClick","height","width","textAlign","map","idx","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport RestAPI from \"services/api\";\n\nimport \"d3-transition\";\n\nimport { handleServerErrors } from \"utils/errorHandler\";\n\nimport { Modal, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport ReactWordcloud from \"react-wordcloud\";\n/* Chart code */\n// Themes begin\n// Themes end\nconst options = {\n  colors: [\"#0000CC\", \"#CC00CC\"],\n  enableTooltip: true,\n  deterministic: true,\n  fontFamily: \"impact\",\n  fontSizes: [14, 60],\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  padding: 3,\n  rotations: 2,\n  rotationAngles: [0, 90],\n  scale: \"sqrt\",\n  spiral: \"archimedean\",\n  transitionDuration: 0,\n};\n\nclass CloudChartPage extends Component {\n  state = {\n    mydata: [],\n    wordArray: [],\n    isModalLoader: false,\n    isTweetData: false,\n    isPaperData: false,\n    tweetIds: [],\n    userPageIDs: [],\n    isData: true,\n    title: \"\",\n    url: \"\",\n    year: \"\",\n    abstract: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({ isLoding: true }, () => {\n      RestAPI.cloudChart()\n        .then((response) => {\n          let keywordArray = [];\n          for (let i = 0; i < response.data.length; i++) {\n            keywordArray.push({\n              text: response.data[i].keyword,\n              value: response.data[i].weight,\n              tweet_ids: response.data[i].tweet_ids,\n              papers: response.data[i].papers,\n              source: response.data[i].source,\n            });\n          }\n          if (response.data.length === 0) {\n            this.setState({\n              isData: false,\n            });\n          }\n          this.setState({\n            isLoding: false,\n            wordArray: keywordArray,\n          });\n        })\n        .catch((error) => {\n          this.setState({ isLoding: false });\n          handleServerErrors(error, toast.error);\n        });\n    });\n  }\n  getCallback = (callback) => {\n    let reactRef = this;\n    return function (word, event) {\n      reactRef.setState({ modal: true, isModalLoader: true });\n      if (word.tweet_ids) {\n        reactRef.setState({\n          isTweetData: true,\n          tweetIds: word.tweet_ids,\n        });\n        if (word.tweet_ids.length === 0) {\n          reactRef.setState({\n            isTweetData: false,\n          });\n        }\n      }\n      if (word.papers) {\n        reactRef.setState({\n          isPaperData: true,\n          userPageIDs: word.papers,\n        });\n\n        if (word.papers.length === 0) {\n          reactRef.setState({\n            isPaperData: false,\n          });\n        }\n      }\n      reactRef.setState({\n        isModalLoader: false,\n      });\n    };\n  };\n\n  toggle = (id) => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  render() {\n    const callbacks = {\n      getWordTooltip: (word) => `${word.source}`,\n      onWordClick: this.getCallback(\"onWordClick\"),\n    };\n\n    return (\n      <Fragment>\n        {this.state.isLoding ? (\n          <div className=\"text-center\" style={{ padding: \"20px\" }}>\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        ) : this.state.isData ? (\n          <>\n            <div style={{ height: 400, width: \"100%\" }}>\n              <ReactWordcloud\n                options={options}\n                callbacks={callbacks}\n                words={this.state.wordArray}\n              />\n            </div>\n          </>\n        ) : (\n          // <div id=\"chartdiv\" style={{ width: \"100%\", height: \"1000px\" }}></div>\n          <div style={{ textAlign: \"center\" }}>No Data Found</div>\n        )}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          size=\"lg\"\n          id=\"modal\"\n        >\n          <ModalBody>\n            <Tabs>\n              <TabList>\n                <Tab>Papers</Tab>\n                <Tab>Tweets</Tab>\n              </TabList>\n              <TabPanel>\n                {this.state.isModalLoader ? (\n                  <div className=\"text-center\" style={{ padding: \"20px\" }}>\n                    <Loader\n                      type=\"Puff\"\n                      color=\"#00BFFF\"\n                      height={100}\n                      width={100}\n                      timeout={1000}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    {this.state.isPaperData ? (\n                      <>\n                        {this.state.userPageIDs.map((data, idx) => (\n                          <>\n                            <strong>Title: </strong> <p>{data.title}</p>\n                            <strong>Year: </strong> <p>{data.year}</p>\n                            <strong>URL: </strong> <p>{data.url}</p>\n                            <strong>Abstract: </strong> <p>{data.abstract}</p>\n                          </>\n                        ))}\n                      </>\n                    ) : (\n                      <>\n                        <p style={{ textAlign: \"center\" }}>\n                          No matching papers found\n                        </p>\n                      </>\n                    )}\n                  </>\n                )}\n              </TabPanel>\n              <TabPanel>\n                {this.state.isModalLoader ? (\n                  <div className=\"text-center\" style={{ padding: \"20px\" }}>\n                    <Loader\n                      type=\"Puff\"\n                      color=\"#00BFFF\"\n                      height={100}\n                      width={100}\n                      timeout={3000}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    {this.state.isTweetData ? (\n                      <>\n                        {this.state.tweetIds.map((data, idx) => (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            <TwitterTweetEmbed\n                              tweetId={data}\n                              placeholder={\n                                <Loader\n                                  type=\"Puff\"\n                                  color=\"#00BFFF\"\n                                  height={100}\n                                  style={{\n                                    padding: \"200px 0px\",\n                                  }}\n                                  width={100}\n                                />\n                              }\n                            />\n                          </div>\n                        ))}\n                      </>\n                    ) : (\n                      <p style={{ textAlign: \"center\" }}>\n                        No matching tweets found{\" \"}\n                      </p>\n                    )}\n                  </>\n                )}\n              </TabPanel>\n            </Tabs>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>\n              OK\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default CloudChartPage;\n"]},"metadata":{},"sourceType":"module"}