{"ast":null,"code":"import { getItem } from \"../utils/localStorage\";\nimport moment from \"moment\";\nexport var logout = function logout() {\n  localStorage.clear();\n  window.location.href = \"/\";\n};\nexport var checkLogin = function checkLogin() {\n  var TOKEN = getItem(\"auth_token\");\n\n  if (TOKEN !== undefined || TOKEN !== null) {\n    return false;\n  } else {\n    return true;\n  }\n};\nexport function convertDateTimeFormat(datestring) {\n  if (datestring !== null && datestring !== \"\") {\n    return datestring.substr(5, 2) + \"/\" + datestring.substr(8, 2) + \"/\" + datestring.substr(0, 4);\n  } else {\n    return \"N/A\";\n  }\n}\nexport function format(datetime, formatter, givenFormatter) {\n  var givenTimezoneOffset = moment.parseZone(datetime).utcOffset();\n\n  if (givenTimezoneOffset !== 0) {\n    return moment(datetime, givenFormatter).utcOffset(givenTimezoneOffset).format(formatter);\n  } else {}\n}\nexport function parseDate(date) {\n  if (!date) return null;\n  var dateComponent = format(new Date(date), \"MMM D\");\n  return dateComponent;\n}\nexport function mmddyy(value) {\n  var dateComponent = format(new Date(value), \"MM/DD/YYYY\");\n  return dateComponent;\n}","map":{"version":3,"sources":["C:/Users/Miaomiao/interestminer/frontend/src/helper/index.js"],"names":["getItem","moment","logout","localStorage","clear","window","location","href","checkLogin","TOKEN","undefined","convertDateTimeFormat","datestring","substr","format","datetime","formatter","givenFormatter","givenTimezoneOffset","parseZone","utcOffset","parseDate","date","dateComponent","Date","mmddyy","value"],"mappings":"AACA,SAASA,OAAT,QAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BC,EAAAA,YAAY,CAACC,KAAb;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,CAHM;AAKP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,MAAMC,KAAK,GAAGT,OAAO,CAAC,YAAD,CAArB;;AACA,MAAIS,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CAPM;AASP,OAAO,SAASE,qBAAT,CAA+BC,UAA/B,EAA2C;AAChD,MAAIA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,EAA1C,EAA8C;AAC5C,WAAOA,UAAU,CAACC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCD,UAAU,CAACC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,CAAhC,GAA0D,GAA1D,GAAgED,UAAU,CAACC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,CAAvE;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,cAArC,EAAqD;AAC1D,MAAIC,mBAAmB,GAAGjB,MAAM,CAACkB,SAAP,CAAiBJ,QAAjB,EAA2BK,SAA3B,EAA1B;;AAEA,MAAIF,mBAAmB,KAAK,CAA5B,EAA+B;AAC7B,WAAOjB,MAAM,CAACc,QAAD,EAAWE,cAAX,CAAN,CACJG,SADI,CACMF,mBADN,EAEJJ,MAFI,CAEGE,SAFH,CAAP;AAGD,GAJD,MAIO,CACN;AACF;AAED,OAAO,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AACX,MAAMC,aAAa,GAAGT,MAAM,CAAC,IAAIU,IAAJ,CAASF,IAAT,CAAD,EAAiB,OAAjB,CAA5B;AACA,SAAOC,aAAP;AACD;AAED,OAAO,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AAC5B,MAAMH,aAAa,GAAGT,MAAM,CAAC,IAAIU,IAAJ,CAASE,KAAT,CAAD,EAAkB,YAAlB,CAA5B;AACA,SAAOH,aAAP;AACD","sourcesContent":["\nimport { getItem } from \"../utils/localStorage\";\nimport moment from \"moment\";\n\nexport const logout = () => {\n  localStorage.clear();\n  window.location.href = \"/\";\n};\n\nexport const checkLogin = () => {\n  const TOKEN = getItem(\"auth_token\");\n  if (TOKEN !== undefined || TOKEN !== null) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport function convertDateTimeFormat(datestring) {\n  if (datestring !== null && datestring !== \"\") {\n    return datestring.substr(5, 2) + \"/\" + datestring.substr(8, 2) + \"/\" + datestring.substr(0, 4);\n  } else {\n    return \"N/A\";\n  }\n}\n\nexport function format(datetime, formatter, givenFormatter) {\n  let givenTimezoneOffset = moment.parseZone(datetime).utcOffset();\n\n  if (givenTimezoneOffset !== 0) {\n    return moment(datetime, givenFormatter)\n      .utcOffset(givenTimezoneOffset)\n      .format(formatter);\n  } else {\n  }\n}\n\nexport function parseDate(date) {\n  if (!date) return null;\n  const dateComponent = format(new Date(date), \"MMM D\");\n  return dateComponent;\n}\n\nexport function mmddyy(value) {\n  const dateComponent = format(new Date(value), \"MM/DD/YYYY\");\n  return dateComponent;\n}"]},"metadata":{},"sourceType":"module"}