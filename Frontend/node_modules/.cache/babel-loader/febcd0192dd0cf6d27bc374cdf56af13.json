{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Interest-Miner\\\\Frontend\\\\src\\\\components\\\\Chart\\\\BarChart.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport RestAPI from \"services/api\";\nimport { handleServerErrors } from \"utils/errorHandler\";\n\nvar BarChart = /*#__PURE__*/function (_Component) {\n  _inherits(BarChart, _Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        fill: {\n          colors: [\"#9C27B0\"]\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      series: [],\n      tweetoptions: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      tweetseries: []\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoding: true\n      }, function () {\n        RestAPI.barChart().then(function (response) {\n          var categorieList = Object.keys(response.data.papers);\n          var value = Object.values(response.data.papers);\n          var tweetscategorieList = Object.keys(response.data.tweets);\n          var tweetsvalue = Object.values(response.data.tweets);\n\n          _this2.setState({\n            isLoding: false,\n            data: response.data,\n            series: [{\n              name: \"Paper\",\n              data: _toConsumableArray(value)\n            }],\n            tweetseries: [{\n              name: \"Tweet\",\n              data: _toConsumableArray(tweetsvalue)\n            }],\n            // options: { ...this.state.options, ...this.state.options.xaxis, ...this.state.options.xaxis.categories = categorieList },\n            // tweetoptions: { ...this.state.tweetoptions, ...this.state.tweetoptions.xaxis, ...this.state.tweetoptions.xaxis.categories = tweetscategorieList },\n            options: {\n              chart: {\n                id: \"basic-bar\"\n              },\n              fill: {\n                colors: [\"#9C27B0\"]\n              },\n              xaxis: {\n                categories: _toConsumableArray(categorieList)\n              }\n            },\n            tweetoptions: {\n              chart: {\n                id: \"basic-bar\"\n              },\n              xaxis: {\n                categories: _toConsumableArray(tweetscategorieList)\n              }\n            }\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            isLoding: false\n          });\n\n          handleServerErrors(error, toast.error);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isLoding ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          padding: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mixed-chart\",\n        style: {\n          paddingLeft: \"20%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"Paper Data\"), /*#__PURE__*/React.createElement(Chart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"bar\",\n        width: \"600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, \"Tweet Data\"), /*#__PURE__*/React.createElement(Chart, {\n        options: this.state.tweetoptions,\n        series: this.state.tweetseries,\n        type: \"bar\",\n        width: \"600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/franc/Desktop/Interest-Miner/Frontend/src/components/Chart/BarChart.js"],"names":["React","Component","Chart","toast","Loader","RestAPI","handleServerErrors","BarChart","props","state","options","chart","id","fill","colors","xaxis","categories","series","tweetoptions","tweetseries","setState","isLoding","barChart","then","response","categorieList","Object","keys","data","papers","value","values","tweetscategorieList","tweets","tweetsvalue","name","catch","error","padding","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"react-loader-spinner\";\nimport RestAPI from \"services/api\";\n\nimport { handleServerErrors } from \"utils/errorHandler\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\",\n        },\n\n        fill: {\n          colors: [\"#9C27B0\"],\n        },\n        xaxis: {\n          categories: [],\n        },\n      },\n      series: [],\n      tweetoptions: {\n        chart: {\n          id: \"basic-bar\",\n        },\n        xaxis: {\n          categories: [],\n        },\n      },\n      tweetseries: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoding: true }, () => {\n      RestAPI.barChart()\n        .then((response) => {\n          let categorieList = Object.keys(response.data.papers);\n          let value = Object.values(response.data.papers);\n          let tweetscategorieList = Object.keys(response.data.tweets);\n          let tweetsvalue = Object.values(response.data.tweets);\n          this.setState({\n            isLoding: false,\n            data: response.data,\n            series: [{ name: \"Paper\", data: [...value] }],\n            tweetseries: [{ name: \"Tweet\", data: [...tweetsvalue] }],\n            // options: { ...this.state.options, ...this.state.options.xaxis, ...this.state.options.xaxis.categories = categorieList },\n            // tweetoptions: { ...this.state.tweetoptions, ...this.state.tweetoptions.xaxis, ...this.state.tweetoptions.xaxis.categories = tweetscategorieList },\n            options: {\n              chart: {\n                id: \"basic-bar\",\n              },\n\n              fill: {\n                colors: [\"#9C27B0\"],\n              },\n              xaxis: {\n                categories: [...categorieList],\n              },\n            },\n            tweetoptions: {\n              chart: {\n                id: \"basic-bar\",\n              },\n              xaxis: {\n                categories: [...tweetscategorieList],\n              },\n            },\n          });\n        })\n        .catch((error) => {\n          this.setState({ isLoding: false });\n          handleServerErrors(error, toast.error);\n        });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.isLoding ? (\n          <div className=\"text-center\" style={{ padding: \"20px\" }}>\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        ) : (\n          <>\n            \n            <div className=\"mixed-chart\" style={{ paddingLeft: \"20%\" }}>\n              <h1>Paper Data</h1>\n              <Chart\n                options={this.state.options}\n                series={this.state.series}\n                type=\"bar\"\n                width=\"600\"\n              />\n              <hr />\n              <h1>Tweet Data</h1>\n              <Chart\n                options={this.state.tweetoptions}\n                series={this.state.tweetseries}\n                type=\"bar\"\n                width=\"600\"\n              />\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}